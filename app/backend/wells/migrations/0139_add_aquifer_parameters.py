# Generated by Django 2.2.28 on 2023-03-18 21:17

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gwells.db_comments.model_mixins
import uuid

MIGRATE_HYDRAULIC_TABLE_INFO = """
    INSERT INTO aquifer_parameters (
        aquifer_parameters_guid,
        well_tag_number,
        storativity,
        transmissivity,
        hydraulic_conductivity,
        specific_yield,
        analytic_solution_type,
        testing_method,
        testing_duration,
        create_user,
        update_user,
        create_date,
        update_date
    )
    SELECT
        uuid_generate_v4() AS aquifer_parameters_guid,
        w.well_tag_number,
        w.storativity,
        w.transmissivity,
        w.hydraulic_conductivity,
        w.specific_yield,
        CAST(w.analytic_solution_type AS varchar) AS analytic_solution_type,
        w.testing_method,
        w.testing_duration,
        'WELLS',
        'WELLS',
        now(),
        now()
    FROM
        well w
    WHERE
        w.storativity IS NOT NULL
        OR w.transmissivity IS NOT NULL
        OR w.hydraulic_conductivity IS NOT NULL
        OR w.specific_yield IS NOT NULL
        OR w.analytic_solution_type IS NOT NULL
        OR w.testing_method IS NOT NULL
        OR w.testing_duration IS NOT NULL;
"""

REVERSE_MIGRATE_HYDRAULIC_TABLE_INFO = """
    DELETE FROM aquifer_parameters;
"""

class Migration(migrations.Migration):

    dependencies = [
        ('wells', '0138_add_conductor_casing_option'),
    ]

    operations = [
        migrations.CreateModel(
            name='AquiferParameters',
            fields=[
                ('create_user', models.CharField(max_length=60)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_user', models.CharField(max_length=60)),
                ('update_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('aquifer_parameters_guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('storativity', models.DecimalField(blank=True, decimal_places=7, max_digits=8, null=True, verbose_name='Storativity')),
                ('transmissivity', models.DecimalField(blank=True, decimal_places=10, max_digits=30, null=True, verbose_name='Transmissivity')),
                ('hydraulic_conductivity', models.TextField(blank=True, max_length=100, null=True, verbose_name='Hydraulic Conductivity')),
                ('specific_yield', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Specific Yield')),
                ('analytic_solution_type', models.TextField(blank=True, max_length=100, null=True, verbose_name='Analytic Solution Type')),
                ('testing_method', models.TextField(blank=True, max_length=100, null=True, verbose_name='Testing Method')),
                ('testing_duration', models.PositiveIntegerField(blank=True, null=True)),
                ('testing_comments', models.TextField(blank=True, max_length=350, null=True, verbose_name='Testing Comments')),
                ('testing_date', models.DateField(null=True, verbose_name='Date of test')),
                ('activity_submission', models.ForeignKey(blank=True, db_column='filing_number', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='aquifer_parameters_set', to='wells.ActivitySubmission')),
                ('well', models.ForeignKey(blank=True, db_column='well_tag_number', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='aquifer_parameters_set', to='wells.Well')),
            ],
            options={
                'db_table': 'aquifer_parameters',
                'ordering': ['testing_date'],
            },
            bases=(models.Model, gwells.db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='fieldsprovided',
            name='aquifer_parameters_set',
            field=models.BooleanField(default=False),
        ),
        migrations.RunSQL(
          MIGRATE_HYDRAULIC_TABLE_INFO,
          REVERSE_MIGRATE_HYDRAULIC_TABLE_INFO
        )
    ]
