apiVersion: v1
kind: Template
metadata:
  annotations:
    description: "Scheduled Task to perform a Database Backup"
    tags: "cronjob,backup"
  labels:
    cronjob: "${JOB_NAME}"
    template: "${JOB_NAME}-config-template"
  name: "${JOB_NAME}-cronjob-template"
parameters:
  - name: "JOB_NAME"
    displayName: "Job Name"
    description: "Name of the Scheduled Job to Create."
    value: "backup"
    required: true
  - name: "SECRET"
    displayName: "Secret Name"
    description: "Name of the Secret to reference."
    value: "gwells-pgsql-staging"
    required: true
  - name: "CONFIGMAP"
    displayName: "Config Map Name"
    description: "Name of the Config Map to reference or create."
    value: "backup-config"
    required: true
  - name: "JOB_PERSISTENT_STORAGE_NAME"
    displayName: "Backup Persistent Storage Name"
    description: "Pre-Created PVC to use for backup target"
    value: "gwells-pgsql-staging-backup"
    required: true
  - name: "SCHEDULE"
    displayName: "Cron Schedule"
    description: "Cron Schedule to Execute the Job (in UTC)"
# Currently targeting 3:00 AM Daily
    value: "0 11 * * *"
    required: true
  - name: "SOURCE_IMAGE_NAME"
    displayName: "Source Image Name"
    description: "The name of the image to use for this resource."
    required: true
    value: "backup"
  - name: "IMAGE_NAMESPACE"
    displayName: "Image Namespace"
    description: "The namespace of the OpenShift project containing the imagestream for the application."
    required: true
    value: "backup-container"
  - name: "TAG_NAME"
    displayName: "Environment TAG name"
    description: "The TAG name for this environment, e.g., dev, test, prod"
    required: true
    value: "dev"
  - name: "DATABASE_SERVICE_NAME"
    displayName: "Database Service Name"
    description: "The name of the database service."
    required: true
    value: "gwells-pgsql-staging"
  - name: "DEFAULT_PORT"
    displayName: "Database Service Port"
    description: "The configured port for the database service"
    required: true
    value: "5432"
  - name: "DATABASE_NAME"
    displayName: "Database Name"
    description: "The name of the database."
    required: true
    value: "gwells"
  - name: "DATABASE_DEPLOYMENT_NAME"
    displayName: "Database Deployment Name"
    description: "The name associated to the database deployment resources.  In particular, this is used to wire up the credentials associated to the database."
    required: true
    value: "postgresql"
  - name: "BACKUP_STRATEGY"
    displayName: "Backup Strategy"
    description: "The strategy to use for backups; for example daily, or rolling."
    required: true
    value: "rolling"
  - name: "BACKUP_DIR"
    displayName: "The root backup directory"
    description: "The name of the root backup directory"
    required: true
    value: "/backups/"
  - name: "NUM_BACKUPS"
    displayName: "The number of backup files to be retained"
    description: "The number of backup files to be retained.  Used for the `daily` backup strategy.  Ignored when using the `rolling` backup strategy."
    required: false
    value: "5"
  - name: "DAILY_BACKUPS"
    displayName: "Number of Daily Backups to Retain"
    description: "The number of daily backup files to be retained.  Used for the `rolling` backup strategy."
    required: false
    value: "7"
  - name: "WEEKLY_BACKUPS"
    displayName: "Number of Weekly Backups to Retain"
    description: "The number of weekly backup files to be retained.  Used for the `rolling` backup strategy."
    required: false
    value: "4"
  - name: "MONTHLY_BACKUPS"
    displayName: "Number of Monthly Backups to Retain"
    description: "The number of monthly backup files to be retained.  Used for the `rolling` backup strategy."
    required: false
    value: "1"
  - name: "JOB_SERVICE_ACCOUNT"
    displayName: "Service Account Name"
    description: "Name of the Service Account To Exeucte the Job As."
    value: "default"
    required: true
  - name: "SUCCESS_JOBS_HISTORY_LIMIT"
    displayName: "Successful Job History Limit"
    description: "The number of successful jobs that will be retained"
    value: "5"
    required: true
  - name: "FAILED_JOBS_HISTORY_LIMIT"
    displayName: "Failed Job History Limit"
    description: "The number of failed jobs that will be retained"
    value: "2"
    required: true
  - name: "JOB_BACKOFF_LIMIT"
    displayName: "Job Backoff Limit"
    description: "The number of attempts to try for a successful job outcome"
    value: "0"
    required: false
objects:
  - apiVersion: v1
    data:
      BACKUP_STRATEGY: ${BACKUP_STRATEGY}
      DAILY_BACKUPS: ${DAILY_BACKUPS}
      DATABASE_SERVICE_NAME: ${DATABASE_SERVICE_NAME}
      DEFAULT_PORT: ${DEFAULT_PORT}
      MONTHLY_BACKUPS: ${MONTHLY_BACKUPS}
      NUM_BACKUPS: ${NUM_BACKUPS}
      POSTGRESQL_DATABASE: ${DATABASE_NAME}
      WEEKLY_BACKUPS: '4'
    kind: ConfigMap
    metadata:
      labels:
        cronjob: ${JOB_NAME}
        template: ${JOB_NAME}-template
      name: ${CONFIGMAP}
      namespace: moe-gwells-test
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: ${JOB_NAME}-pgsql-staging-backup
    spec:
      concurrencyPolicy: Forbid
      failedJobsHistoryLimit: 2
      jobTemplate:
        metadata:
          creationTimestamp: null
          labels:
            cronjob: ${JOB_NAME}
            template: ${JOB_NAME}-job
        spec:
          backoffLimit: 0
          template:
            metadata:
              creationTimestamp: null
            spec:
              activeDeadlineSeconds: 600
              containers:
              - command:
                - /bin/bash
                - -c
                - /backup.sh -1
                env:
                - name: BACKUP_DIR
                  value: /backups/
                - name: BACKUP_STRATEGY
                  valueFrom:
                    configMapKeyRef:
                      key: BACKUP_STRATEGY
                      name: ${CONFIGMAP}
                - name: NUM_BACKUPS
                  valueFrom:
                    configMapKeyRef:
                      key: NUM_BACKUPS
                      name: ${CONFIGMAP}
                      optional: true
                - name: DAILY_BACKUPS
                  valueFrom:
                    configMapKeyRef:
                      key: DAILY_BACKUPS
                      name: ${CONFIGMAP}
                      optional: true
                - name: WEEKLY_BACKUPS
                  valueFrom:
                    configMapKeyRef:
                      key: WEEKLY_BACKUPS
                      name: ${CONFIGMAP}
                      optional: true
                - name: MONTHLY_BACKUPS
                  valueFrom:
                    configMapKeyRef:
                      key: MONTHLY_BACKUPS
                      name: ${CONFIGMAP}
                      optional: true
                - name: DATABASE_SERVICE_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: DATABASE_SERVICE_NAME
                      name: ${CONFIGMAP}
                - name: DEFAULT_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: DEFAULT_PORT
                      name: ${CONFIGMAP}
                      optional: true
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    configMapKeyRef:
                      key: POSTGRESQL_DATABASE
                      name: ${CONFIGMAP}
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${SECRET}
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${SECRET}
                image: docker-registry.default.svc:5000/moe-gwells-tools/backup:latest
                imagePullPolicy: Always
                name: backup-cronjob
                resources: {}
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                - mountPath: /backups/
                  name: backup
              dnsPolicy: ClusterFirst
              restartPolicy: Never
              schedulerName: default-scheduler
              securityContext: {}
              serviceAccount: default
              serviceAccountName: default
              terminationGracePeriodSeconds: 30
              volumes:
              - name: ${JOB_NAME}
                persistentVolumeClaim:
                  claimName: ${JOB_PERSISTENT_STORAGE_NAME}
      schedule: ${SCHEDULE}
      successfulJobsHistoryLimit: 5
      suspend: false
