apiVersion: v1
kind: Template
metadata: {}
parameters:
  - name: VERSION
    required: true
  - name: NAMESPACE
    required: true
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewBuild
      creationTimestamp: null
      labels:
        name: gwells-documents-backup
        component: backups
        part-of: gwells
      name: gwells-documents-backup
      namespace: "${NAMESPACE}"
    spec:
      lookupPolicy:
        local: false
    status:
      dockerImageRepository: ""
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewBuild
      creationTimestamp: null
      labels:
        name: "gwells-documents-backup-${VERSION}"
        component: backups
        version: ${VERSION}
        part-of: gwells
      name: "gwells-documents-backup-${VERSION}"
    spec:
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: gwells-documents-backup:${VERSION}
      postCommit: {}
      resources: {}
      source:
        git:
          uri: https://github.com/bcgov/gwells.git
          ref: steve/backups
        contextDir: openshift/jobs/minio-backup
        dockerfile: |
          FROM alpine:latest
          USER root
          RUN apk add --update \
              curl \
              && rm -rf /var/cache/apk/*
          RUN curl -Lo restic.bz2 https://github.com/restic/restic/releases/download/v0.9.4/restic_0.9.4_linux_amd64.bz2 \
              && bzip2 -d restic.bz2 \
              && mv restic /usr/bin/restic \
              && chmod +x /usr/bin/restic \
              && curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip \
              && unzip rclone-current-linux-amd64.zip \
              && cd rclone-*-linux-amd64 \
              && cp rclone /usr/bin/ \
              && chown root:root /usr/bin/rclone \
              && chmod 755 /usr/bin/rclone
          COPY ./rclone.conf /.rclone.conf
          COPY ./entrypoint.sh /
          ENTRYPOINT ["/entrypoint.sh"]
          USER 1001
        type: Dockerfile
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: alpine:3.7
            namespace: openshift
        type: Docker
      triggers:
      - type: ConfigChange
    status:
      lastVersion: 0
