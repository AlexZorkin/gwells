apiVersion: v1
kind: Template
labels:
  template: pgtileserv-template
metadata:
  creationTimestamp: null
  name: pgtileserv-dc
parameters:
  - name: IMAGE_TAG
    value: latest
  - name: NAME_SUFFIX
    required: true
  - name: DATABASE_SERVICE_NAME
    required: true
  - description: Request for CPU resources measured in cpu units, e.g. 200m
    displayName: CPU resource request
    name: REQUEST_CPU
    required: false
    value: 100m
  - description: Request for memory resources measured in bytes, e.g. 512Mi, 1Gi.
    displayName: Memory resource request
    name: REQUEST_MEMORY
    required: false
    value: 256Mi
  - description: Limit for CPU resources measured in cpu units, e.g. 200m
    displayName: CPU resource limit
    name: LIMIT_CPU
    required: false
    value: 200m
  - description: Limit for memory resources measured in bytes, e.g. 512Mi, 1Gi.
    displayName: Memory resource limit
    name: LIMIT_MEMORY
    required: false
    value: 512Mi
objects:

  - apiVersion: v1
    data:
      Caddyfile: |-
        0.0.0.0:2015 {
          root * /var/www/html
          log stdout
          errors stdout
          encoding gzip
          uri strip_prefix /tiles
          reverse_proxy localhost:7800
        }
        :2016 {
          respond /health 200
        }
    kind: ConfigMap
    metadata:
      labels:
        app: gwells${NAME_SUFFIX}
        name: pgtileserv${NAME_SUFFIX}-caddyfile
        appver: gwells${NAME_SUFFIX}
      name: pgtileserv${NAME_SUFFIX}-caddyfile
  - apiVersion: v1
    kind: Service
    metadata:
      name: pgtileserv${NAME_SUFFIX}
    spec:
      ports:
        - port: 2015
          protocol: TCP
      selector:
        name: pgtileserv${NAME_SUFFIX}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: pgtileserv${NAME_SUFFIX}
    spec:
      replicas: 1
      selector:
        name: pgtileserv${NAME_SUFFIX}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: gwells${NAME_SUFFIX}
            name: pgtileserv${NAME_SUFFIX}
            appver: gwells${NAME_SUFFIX}
        spec:
          volumes:
          - configMap:
              defaultMode: 420
              name: pgtileserv${NAME_SUFFIX}-caddyfile
              items:
                - key: Caddyfile
                  path: Caddyfile
            name: volume-caddyfile
          containers:
            - name: caddy
              volumeMounts:
              - mountPath: /etc/caddy/Caddyfile
                name: volume-caddyfile
                subPath: Caddyfile
              image: caddy/caddy:2.0.0-rc.3
              imagePullPolicy: IfNotPresent
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                httpGet:
                  path: /health
                  port: 2016
                timeoutSeconds: 1
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                httpGet:
                  path: /health
                  port: 2016
                timeoutSeconds: 1
              ports:
                - containerPort: 2015
                  protocol: TCP
                - containerPort: 2016
                  protocol: TCP
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
            - capabilities: {}
              env:
                - name: DATABASE_HOST
                  value: ${DATABASE_SERVICE_NAME}
                - name: PG_DATABASE
                  valueFrom:
                    secretKeyRef:
                        key: database-name
                        name: ${DATABASE_SERVICE_NAME}
                - name: PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                        key: database-password
                        name: ${DATABASE_SERVICE_NAME}
                - name: PG_USER
                  value: postgis_ftw
                - name: DATABASE_URL
                  value: postgres://$(PG_USER):$(PG_PASSWORD)@$(DATABASE_HOST)/gwells
              image: pramsey/pg_tileserv:${IMAGE_TAG}
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                httpGet:
                  path: /
                  port: 7800
                  # fix below here
                timeoutSeconds: 1
              name: pgtileserv
              ports:
                - containerPort: 7800
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /
                  port: 7800
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: ${REQUEST_CPU}
                  memory: ${REQUEST_MEMORY}
                limits:
                  cpu: ${LIMIT_CPU}
                  memory: ${LIMIT_MEMORY}
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
      triggers:
        - type: ConfigChange
    status: {}
